// Generated by js_of_ocaml
//# buildInfo:effects=disabled, kind=cma, use-js-string=true, version=6.0.1

//# unitInfo: Provides: Ppx_derivers
//# unitInfo: Requires: Stdlib, Stdlib__Hashtbl, Stdlib__Printf
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_wrap_exception = runtime.caml_wrap_exception;
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib_Hashtbl = global_data.Stdlib__Hashtbl,
    Stdlib = global_data.Stdlib,
    Stdlib_Printf = global_data.Stdlib__Printf,
    all = caml_call2(Stdlib_Hashtbl[1], 0, 42),
    _a_ =
      [0,
       [11,
        "Ppx_deriviers.register: ",
        [3, 0, [11, " is already registered", 0]]],
       "Ppx_deriviers.register: %S is already registered"];
   function register(name, deriver){
    if(caml_call2(Stdlib_Hashtbl[9], all, name))
     caml_call3(Stdlib_Printf[10], Stdlib[2], _a_, name);
    return caml_call3(Stdlib_Hashtbl[5], all, name, deriver);
   }
   function lookup(name){
    try{var drv = caml_call2(Stdlib_Hashtbl[6], all, name);}
    catch(_c_){
     var _b_ = caml_wrap_exception(_c_);
     if(_b_ === Stdlib[8]) return 0;
     throw caml_maybe_attach_backtrace(_b_, 0);
    }
    return [0, drv];
   }
   function derivers(param){
    return caml_call3
            (Stdlib_Hashtbl[14],
             function(name, drv, acc){return [0, [0, name, drv], acc];},
             all,
             0);
   }
   var Ppx_derivers = [0, register, lookup, derivers];
   runtime.caml_register_global(4, Ppx_derivers, "Ppx_derivers");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHB4X2Rlcml2ZXJzLmNtYS5qcyIsInNlY3Rpb25zIjpbeyJvZmZzZXQiOnsibGluZSI6OSwiY29sdW1uIjowfSwibWFwIjp7InZlcnNpb24iOjMsImZpbGUiOiJwcHhfZGVyaXZlcnMuY21hLmpzIiwibmFtZXMiOlsicnVudGltZSIsImNhbWxfbWF5YmVfYXR0YWNoX2JhY2t0cmFjZSIsImNhbWxfd3JhcF9leGNlcHRpb24iLCJjYW1sX2NhbGwyIiwiZiIsImEwIiwiYTEiLCJjYW1sX2NhbGwzIiwiYTIiLCJnbG9iYWxfZGF0YSIsIlN0ZGxpYl9IYXNodGJsIiwiU3RkbGliIiwiU3RkbGliX1ByaW50ZiIsImFsbCIsInJlZ2lzdGVyIiwibmFtZSIsImRlcml2ZXIiLCJsb29rdXAiLCJkcnYiLCJkZXJpdmVycyIsInBhcmFtIiwiYWNjIiwiUHB4X2Rlcml2ZXJzIl0sInNvdXJjZXMiOlsiL2J1aWx0aW4vYmxhY2tib3gubWwiLCIvaG9tZS9jZ2VsaW4vLm9wYW0vZGVmYXVsdC9saWIvcHB4X2Rlcml2ZXJzL3BweF9kZXJpdmVycy5tbCJdLCJtYXBwaW5ncyI6IklBQUFBLFVBQUE7QUFBQSxJQUFBQyw4QkFBQTtBQUFBLElBQUFDLHNCQUFBO0FBQUEsWUFBQUMsV0FBQUMsR0FBQUMsSUFBQUM7QUFBQUEsSUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFlBQUFDLFdBQUFILEdBQUFDLElBQUFDLElBQUFFO0FBQUFBLElBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBQUFDLGNBQUE7QUFBQSxJQUFBQyxpQkFBQTtBQUFBLElBQUFDLFNBQUE7QUFBQSxJQUFBQyxnQkFBQTtBQUFBLElBQUFDLE1DRVU7QUFBQTtBQUFBLE1BQWlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQUFBQyxTQUFBQyxNQUFBQztBQUFBQSxJQUd0QjtBQUFBLEtBQ0Q7QUFBQSxJQUVGLHdEQUE0QjtBQUFBO0FBQUEsWUFBQUMsT0FBQUY7QUFBQUEsSUFHNUIsUUFBQUcsTUFBTTtBQUFBO0FBQUEsZURYUjtBQUFBLDJCQ2EyQjtBQUFBLEtEYjNCO0FBQUE7QUFBQSxJQ1lXO0FBQUEsR0FDb0I7QUFBQSxZQUFBQyxTQUFBQztBQUFBQSxJQUc3QjtBQUFBO0FBQUEsc0JBQUFMLE1BQUFHLEtBQUFHLEtBQWtDLGdDQUFrQjtBQUFBO0FBQUEsZUFBUTtBQUFBO0FBQUEsT0FBQUMsZUFkbkM7QUFBQTtBQUFBO0FBQUEsRURGM0IiLCJzb3VyY2VzQ29udGVudCI6WyIoKiBnZW5lcmF0ZWQgY29kZSAqKSIsInR5cGUgZGVyaXZlciA9IC4uXG5cbmxldCBhbGwgPSBIYXNodGJsLmNyZWF0ZSA0MlxuXG5sZXQgcmVnaXN0ZXIgbmFtZSBkZXJpdmVyID1cbiAgaWYgSGFzaHRibC5tZW0gYWxsIG5hbWUgdGhlblxuICAgIFByaW50Zi5rc3ByaW50ZiBmYWlsd2l0aFxuICAgICAgXCJQcHhfZGVyaXZpZXJzLnJlZ2lzdGVyOiAlUyBpcyBhbHJlYWR5IHJlZ2lzdGVyZWRcIiBuYW1lO1xuICBIYXNodGJsLmFkZCBhbGwgbmFtZSBkZXJpdmVyXG5cbmxldCBsb29rdXAgbmFtZSA9XG4gIG1hdGNoIEhhc2h0YmwuZmluZCBhbGwgbmFtZSB3aXRoXG4gIHwgZHJ2IC0+IFNvbWUgZHJ2XG4gIHwgZXhjZXB0aW9uIE5vdF9mb3VuZCAtPiBOb25lXG5cbmxldCBkZXJpdmVycyAoKSA9XG4gIEhhc2h0YmwuZm9sZCAoZnVuIG5hbWUgZHJ2IGFjYyAtPiAobmFtZSwgZHJ2KSA6OiBhY2MpIGFsbCBbXVxuIl0sImlnbm9yZUxpc3QiOlswXX19XX0=
